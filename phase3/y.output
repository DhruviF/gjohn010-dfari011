Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Function Program

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    4 Declaration: Ident_Loop COLON INTEGER
    5            | Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    6 Declaration_Loop: %empty
    7                 | Declaration SEMICOLON Declaration_Loop

    8 Ident_Loop: Ident
    9           | Ident COMMA Ident_Loop

   10 Ident: IDENT

   11 Statement_Loop: Statement SEMICOLON Statement_Loop
   12               | Statement SEMICOLON

   13 Statement: Var ASSIGN Expression
   14          | IF BoolExp THEN Statement_Loop ElseStatement ENDIF
   15          | WHILE BoolExp BEGINLOOP Statement_Loop ENDLOOP
   16          | DO BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp
   17          | READ Var
   18          | WRITE Var
   19          | CONTINUE
   20          | BREAK
   21          | RETURN Expression

   22 ElseStatement: %empty
   23              | ELSE Statement_Loop

   24 BoolExp: NOT BoolExpression
   25        | BoolExpression

   26 BoolExpression: Expression Comp Expression
   27               | TRUE
   28               | FALSE
   29               | L_PAREN BoolExp R_PAREN

   30 Comp: EQ
   31     | NEQ
   32     | LT
   33     | GT
   34     | LTE
   35     | GTE

   36 Expression: Mult_Expr
   37           | Mult_Expr PLUS Expression
   38           | Mult_Expr SUB Expression

   39 Expression_Loop: %empty
   40                | Expression COMMA Expression_Loop
   41                | Expression

   42 Mult_Expr: Term
   43          | Term MULT Mult_Expr
   44          | Term DIV Mult_Expr
   45          | Term MOD Mult_Expr

   46 Term: Var
   47     | NUMBER
   48     | L_PAREN Expression R_PAREN
   49     | Ident L_PAREN Expression_Loop R_PAREN

   50 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   51    | Ident


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 10
NUMBER (259) 5 47
EQ (260) 30
ASSIGN (261) 13
PLUS (262) 37
SUB (263) 38
MULT (264) 43
DIV (265) 44
L_PAREN (266) 29 48 49
R_PAREN (267) 29 48 49
SEMICOLON (268) 3 7 11 12
COLON (269) 4 5
LT (270) 32
LTE (271) 34
GT (272) 33
GTE (273) 35
L_SQUARE_BRACKET (274) 5 50
R_SQUARE_BRACKET (275) 5 50
MOD (276) 45
NEQ (277) 31
COMMA (278) 9 40
IF (279) 14
ENDIF (280) 14
WHILE (281) 15 16
THEN (282) 14
FUNCTION (283) 3
INTEGER (284) 4 5
READ (285) 17
WRITE (286) 18
ARRAY (287) 5
OF (288) 5
CONTINUE (289) 19
BREAK (290) 20
NOT (291) 24
TRUE (292) 27
FALSE (293) 28
RETURN (294) 21
BEGINLOOP (295) 15 16
ENDLOOP (296) 15 16
BEGIN_LOCALS (297) 3
END_LOCALS (298) 3
BEGIN_PARAMS (299) 3
END_PARAMS (300) 3
BEGIN_BODY (301) 3
END_BODY (302) 3
ELSE (303) 23
DO (304) 16


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1 2, on right: 0 2
Function (52)
    on left: 3, on right: 2
Declaration (53)
    on left: 4 5, on right: 7
Declaration_Loop (54)
    on left: 6 7, on right: 3 7
Ident_Loop (55)
    on left: 8 9, on right: 4 5 9
Ident (56)
    on left: 10, on right: 3 8 9 49 50 51
Statement_Loop (57)
    on left: 11 12, on right: 3 11 14 15 16 23
Statement (58)
    on left: 13 14 15 16 17 18 19 20 21, on right: 11 12
ElseStatement (59)
    on left: 22 23, on right: 14
BoolExp (60)
    on left: 24 25, on right: 14 15 16 29
BoolExpression (61)
    on left: 26 27 28 29, on right: 24 25
Comp (62)
    on left: 30 31 32 33 34 35, on right: 26
Expression (63)
    on left: 36 37 38, on right: 13 21 26 37 38 40 41 48 50
Expression_Loop (64)
    on left: 39 40 41, on right: 40 49
Mult_Expr (65)
    on left: 42 43 44 45, on right: 36 37 38 43 44 45
Term (66)
    on left: 46 47 48 49, on right: 42 43 44 45
Var (67)
    on left: 50 51, on right: 13 17 18 46


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 2
    Function  go to state 3


State 1

    3 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 4

    Ident  go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    2 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program   go to state 7
    Function  go to state 3


State 4

   10 Ident: IDENT .

    $default  reduce using rule 10 (Ident)


State 5

    3 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Program: Function Program .

    $default  reduce using rule 2 (Program)


State 8

    3 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 6 (Declaration_Loop)

    Declaration       go to state 10
    Declaration_Loop  go to state 11
    Ident_Loop        go to state 12
    Ident             go to state 13


State 10

    7 Declaration_Loop: Declaration . SEMICOLON Declaration_Loop

    SEMICOLON  shift, and go to state 14


State 11

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop . END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    4 Declaration: Ident_Loop . COLON INTEGER
    5            | Ident_Loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 13

    8 Ident_Loop: Ident .
    9           | Ident . COMMA Ident_Loop

    COMMA  shift, and go to state 17

    $default  reduce using rule 8 (Ident_Loop)


State 14

    7 Declaration_Loop: Declaration SEMICOLON . Declaration_Loop

    IDENT  shift, and go to state 4

    $default  reduce using rule 6 (Declaration_Loop)

    Declaration       go to state 10
    Declaration_Loop  go to state 18
    Ident_Loop        go to state 12
    Ident             go to state 13


State 15

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS . BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    4 Declaration: Ident_Loop COLON . INTEGER
    5            | Ident_Loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 17

    9 Ident_Loop: Ident COMMA . Ident_Loop

    IDENT  shift, and go to state 4

    Ident_Loop  go to state 22
    Ident       go to state 13


State 18

    7 Declaration_Loop: Declaration SEMICOLON Declaration_Loop .

    $default  reduce using rule 7 (Declaration_Loop)


State 19

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS . Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 6 (Declaration_Loop)

    Declaration       go to state 10
    Declaration_Loop  go to state 23
    Ident_Loop        go to state 12
    Ident             go to state 13


State 20

    4 Declaration: Ident_Loop COLON INTEGER .

    $default  reduce using rule 4 (Declaration)


State 21

    5 Declaration: Ident_Loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 22

    9 Ident_Loop: Ident COMMA Ident_Loop .

    $default  reduce using rule 9 (Ident_Loop)


State 23

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop . END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    5 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS . BEGIN_BODY Statement_Loop END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    5 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY . Statement_Loop END_BODY

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36

    Ident           go to state 37
    Statement_Loop  go to state 38
    Statement       go to state 39
    Var             go to state 40


State 28

    5 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 29

   14 Statement: IF . BoolExp THEN Statement_Loop ElseStatement ENDIF

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 48
    BoolExpression  go to state 49
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 30

   15 Statement: WHILE . BoolExp BEGINLOOP Statement_Loop ENDLOOP

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 54
    BoolExpression  go to state 49
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 31

   17 Statement: READ . Var

    IDENT  shift, and go to state 4

    Ident  go to state 37
    Var    go to state 55


State 32

   18 Statement: WRITE . Var

    IDENT  shift, and go to state 4

    Ident  go to state 37
    Var    go to state 56


State 33

   19 Statement: CONTINUE .

    $default  reduce using rule 19 (Statement)


State 34

   20 Statement: BREAK .

    $default  reduce using rule 20 (Statement)


State 35

   21 Statement: RETURN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident       go to state 47
    Expression  go to state 58
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 36

   16 Statement: DO . BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp

    BEGINLOOP  shift, and go to state 59


State 37

   50 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   51    | Ident .

    L_SQUARE_BRACKET  shift, and go to state 60

    $default  reduce using rule 51 (Var)


State 38

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop . END_BODY

    END_BODY  shift, and go to state 61


State 39

   11 Statement_Loop: Statement . SEMICOLON Statement_Loop
   12               | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 62


State 40

   13 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 63


State 41

    5 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 64


State 42

   47 Term: NUMBER .

    $default  reduce using rule 47 (Term)


State 43

   29 BoolExpression: L_PAREN . BoolExp R_PAREN
   48 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 65
    BoolExpression  go to state 49
    Expression      go to state 66
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 44

   24 BoolExp: NOT . BoolExpression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExpression  go to state 67
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 45

   27 BoolExpression: TRUE .

    $default  reduce using rule 27 (BoolExpression)


State 46

   28 BoolExpression: FALSE .

    $default  reduce using rule 28 (BoolExpression)


State 47

   49 Term: Ident . L_PAREN Expression_Loop R_PAREN
   50 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   51    | Ident .

    L_PAREN           shift, and go to state 68
    L_SQUARE_BRACKET  shift, and go to state 60

    $default  reduce using rule 51 (Var)


State 48

   14 Statement: IF BoolExp . THEN Statement_Loop ElseStatement ENDIF

    THEN  shift, and go to state 69


State 49

   25 BoolExp: BoolExpression .

    $default  reduce using rule 25 (BoolExp)


State 50

   26 BoolExpression: Expression . Comp Expression

    EQ   shift, and go to state 70
    LT   shift, and go to state 71
    LTE  shift, and go to state 72
    GT   shift, and go to state 73
    GTE  shift, and go to state 74
    NEQ  shift, and go to state 75

    Comp  go to state 76


State 51

   36 Expression: Mult_Expr .
   37           | Mult_Expr . PLUS Expression
   38           | Mult_Expr . SUB Expression

    PLUS  shift, and go to state 77
    SUB   shift, and go to state 78

    $default  reduce using rule 36 (Expression)


State 52

   42 Mult_Expr: Term .
   43          | Term . MULT Mult_Expr
   44          | Term . DIV Mult_Expr
   45          | Term . MOD Mult_Expr

    MULT  shift, and go to state 79
    DIV   shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 42 (Mult_Expr)


State 53

   46 Term: Var .

    $default  reduce using rule 46 (Term)


State 54

   15 Statement: WHILE BoolExp . BEGINLOOP Statement_Loop ENDLOOP

    BEGINLOOP  shift, and go to state 82


State 55

   17 Statement: READ Var .

    $default  reduce using rule 17 (Statement)


State 56

   18 Statement: WRITE Var .

    $default  reduce using rule 18 (Statement)


State 57

   48 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident       go to state 47
    Expression  go to state 83
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 58

   21 Statement: RETURN Expression .

    $default  reduce using rule 21 (Statement)


State 59

   16 Statement: DO BEGINLOOP . Statement_Loop ENDLOOP WHILE BoolExp

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36

    Ident           go to state 37
    Statement_Loop  go to state 84
    Statement       go to state 39
    Var             go to state 40


State 60

   50 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident       go to state 47
    Expression  go to state 85
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 61

    3 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY .

    $default  reduce using rule 3 (Function)


State 62

   11 Statement_Loop: Statement SEMICOLON . Statement_Loop
   12               | Statement SEMICOLON .

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36

    $default  reduce using rule 12 (Statement_Loop)

    Ident           go to state 37
    Statement_Loop  go to state 86
    Statement       go to state 39
    Var             go to state 40


State 63

   13 Statement: Var ASSIGN . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident       go to state 47
    Expression  go to state 87
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 64

    5 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 5 (Declaration)


State 65

   29 BoolExpression: L_PAREN BoolExp . R_PAREN

    R_PAREN  shift, and go to state 88


State 66

   26 BoolExpression: Expression . Comp Expression
   48 Term: L_PAREN Expression . R_PAREN

    EQ       shift, and go to state 70
    R_PAREN  shift, and go to state 89
    LT       shift, and go to state 71
    LTE      shift, and go to state 72
    GT       shift, and go to state 73
    GTE      shift, and go to state 74
    NEQ      shift, and go to state 75

    Comp  go to state 76


State 67

   24 BoolExp: NOT BoolExpression .

    $default  reduce using rule 24 (BoolExp)


State 68

   49 Term: Ident L_PAREN . Expression_Loop R_PAREN

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    $default  reduce using rule 39 (Expression_Loop)

    Ident            go to state 47
    Expression       go to state 90
    Expression_Loop  go to state 91
    Mult_Expr        go to state 51
    Term             go to state 52
    Var              go to state 53


State 69

   14 Statement: IF BoolExp THEN . Statement_Loop ElseStatement ENDIF

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36

    Ident           go to state 37
    Statement_Loop  go to state 92
    Statement       go to state 39
    Var             go to state 40


State 70

   30 Comp: EQ .

    $default  reduce using rule 30 (Comp)


State 71

   32 Comp: LT .

    $default  reduce using rule 32 (Comp)


State 72

   34 Comp: LTE .

    $default  reduce using rule 34 (Comp)


State 73

   33 Comp: GT .

    $default  reduce using rule 33 (Comp)


State 74

   35 Comp: GTE .

    $default  reduce using rule 35 (Comp)


State 75

   31 Comp: NEQ .

    $default  reduce using rule 31 (Comp)


State 76

   26 BoolExpression: Expression Comp . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident       go to state 47
    Expression  go to state 93
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 77

   37 Expression: Mult_Expr PLUS . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident       go to state 47
    Expression  go to state 94
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 78

   38 Expression: Mult_Expr SUB . Expression

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident       go to state 47
    Expression  go to state 95
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 79

   43 Mult_Expr: Term MULT . Mult_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident      go to state 47
    Mult_Expr  go to state 96
    Term       go to state 52
    Var        go to state 53


State 80

   44 Mult_Expr: Term DIV . Mult_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident      go to state 47
    Mult_Expr  go to state 97
    Term       go to state 52
    Var        go to state 53


State 81

   45 Mult_Expr: Term MOD . Mult_Expr

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    Ident      go to state 47
    Mult_Expr  go to state 98
    Term       go to state 52
    Var        go to state 53


State 82

   15 Statement: WHILE BoolExp BEGINLOOP . Statement_Loop ENDLOOP

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36

    Ident           go to state 37
    Statement_Loop  go to state 99
    Statement       go to state 39
    Var             go to state 40


State 83

   48 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 89


State 84

   16 Statement: DO BEGINLOOP Statement_Loop . ENDLOOP WHILE BoolExp

    ENDLOOP  shift, and go to state 100


State 85

   50 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 101


State 86

   11 Statement_Loop: Statement SEMICOLON Statement_Loop .

    $default  reduce using rule 11 (Statement_Loop)


State 87

   13 Statement: Var ASSIGN Expression .

    $default  reduce using rule 13 (Statement)


State 88

   29 BoolExpression: L_PAREN BoolExp R_PAREN .

    $default  reduce using rule 29 (BoolExpression)


State 89

   48 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 48 (Term)


State 90

   40 Expression_Loop: Expression . COMMA Expression_Loop
   41                | Expression .

    COMMA  shift, and go to state 102

    $default  reduce using rule 41 (Expression_Loop)


State 91

   49 Term: Ident L_PAREN Expression_Loop . R_PAREN

    R_PAREN  shift, and go to state 103


State 92

   14 Statement: IF BoolExp THEN Statement_Loop . ElseStatement ENDIF

    ELSE  shift, and go to state 104

    $default  reduce using rule 22 (ElseStatement)

    ElseStatement  go to state 105


State 93

   26 BoolExpression: Expression Comp Expression .

    $default  reduce using rule 26 (BoolExpression)


State 94

   37 Expression: Mult_Expr PLUS Expression .

    $default  reduce using rule 37 (Expression)


State 95

   38 Expression: Mult_Expr SUB Expression .

    $default  reduce using rule 38 (Expression)


State 96

   43 Mult_Expr: Term MULT Mult_Expr .

    $default  reduce using rule 43 (Mult_Expr)


State 97

   44 Mult_Expr: Term DIV Mult_Expr .

    $default  reduce using rule 44 (Mult_Expr)


State 98

   45 Mult_Expr: Term MOD Mult_Expr .

    $default  reduce using rule 45 (Mult_Expr)


State 99

   15 Statement: WHILE BoolExp BEGINLOOP Statement_Loop . ENDLOOP

    ENDLOOP  shift, and go to state 106


State 100

   16 Statement: DO BEGINLOOP Statement_Loop ENDLOOP . WHILE BoolExp

    WHILE  shift, and go to state 107


State 101

   50 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 50 (Var)


State 102

   40 Expression_Loop: Expression COMMA . Expression_Loop

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 57

    $default  reduce using rule 39 (Expression_Loop)

    Ident            go to state 47
    Expression       go to state 90
    Expression_Loop  go to state 108
    Mult_Expr        go to state 51
    Term             go to state 52
    Var              go to state 53


State 103

   49 Term: Ident L_PAREN Expression_Loop R_PAREN .

    $default  reduce using rule 49 (Term)


State 104

   23 ElseStatement: ELSE . Statement_Loop

    IDENT     shift, and go to state 4
    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    BREAK     shift, and go to state 34
    RETURN    shift, and go to state 35
    DO        shift, and go to state 36

    Ident           go to state 37
    Statement_Loop  go to state 109
    Statement       go to state 39
    Var             go to state 40


State 105

   14 Statement: IF BoolExp THEN Statement_Loop ElseStatement . ENDIF

    ENDIF  shift, and go to state 110


State 106

   15 Statement: WHILE BoolExp BEGINLOOP Statement_Loop ENDLOOP .

    $default  reduce using rule 15 (Statement)


State 107

   16 Statement: DO BEGINLOOP Statement_Loop ENDLOOP WHILE . BoolExp

    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 111
    BoolExpression  go to state 49
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 108

   40 Expression_Loop: Expression COMMA Expression_Loop .

    $default  reduce using rule 40 (Expression_Loop)


State 109

   23 ElseStatement: ELSE Statement_Loop .

    $default  reduce using rule 23 (ElseStatement)


State 110

   14 Statement: IF BoolExp THEN Statement_Loop ElseStatement ENDIF .

    $default  reduce using rule 14 (Statement)


State 111

   16 Statement: DO BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp .

    $default  reduce using rule 16 (Statement)
