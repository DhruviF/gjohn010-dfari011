Terminals unused in grammar

   TRUE
   FALSE


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: Function Functions
    3          | %empty

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    5 Declaration: Ident COLON INTEGER
    6            | Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    7 Declaration_Loop: %empty
    8                 | Declaration SEMICOLON Declaration_Loop

    9 Ident: IDENT

   10 Statement_Loop: %empty
   11               | Statement SEMICOLON Statement_Loop

   12 Statement: Ident ASSIGN Expression
   13          | Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression
   14          | IF BoolExp THEN Statement_Loop ElseStatement ENDIF
   15          | WHILE BoolExp BEGINLOOP Statement_Loop ENDLOOP
   16          | DO BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp
   17          | READ Var
   18          | WRITE Var
   19          | CONTINUE
   20          | BREAK
   21          | RETURN Expression

   22 ElseStatement: %empty
   23              | ELSE Statement_Loop

   24 BoolExp: NOT BoolExpression
   25        | BoolExpression

   26 BoolExpression: Expression Comp Expression
   27               | L_PAREN BoolExp R_PAREN

   28 Comp: EQ
   29     | NEQ
   30     | LT
   31     | GT
   32     | LTE
   33     | GTE

   34 Expression: Mult_Expr
   35           | Mult_Expr PLUS Expression
   36           | Mult_Expr SUB Expression

   37 Expression_Loop: %empty
   38                | Expression COMMA Expression_Loop
   39                | Expression

   40 Mult_Expr: Term
   41          | Term MULT Mult_Expr
   42          | Term DIV Mult_Expr
   43          | Term MOD Mult_Expr

   44 Term: Var
   45     | NUMBER
   46     | L_PAREN Expression R_PAREN
   47     | Ident L_PAREN Expression_Loop R_PAREN

   48 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   49    | Ident


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 9
NUMBER (259) 6 45
EQ (260) 28
ASSIGN (261) 12 13
PLUS (262) 35
SUB (263) 36
MULT (264) 41
DIV (265) 42
L_PAREN (266) 27 46 47
R_PAREN (267) 27 46 47
SEMICOLON (268) 4 8 11
COLON (269) 5 6
LT (270) 30
LTE (271) 32
GT (272) 31
GTE (273) 33
L_SQUARE_BRACKET (274) 6 13 48
R_SQUARE_BRACKET (275) 6 13 48
MOD (276) 43
NEQ (277) 29
COMMA (278) 38
IF (279) 14
ENDIF (280) 14
WHILE (281) 15 16
THEN (282) 14
FUNCTION (283) 4
INTEGER (284) 5 6
READ (285) 17
WRITE (286) 18
ARRAY (287) 6
OF (288) 6
CONTINUE (289) 19
BREAK (290) 20
NOT (291) 24
TRUE (292)
FALSE (293)
RETURN (294) 21
BEGINLOOP (295) 15 16
ENDLOOP (296) 15 16
BEGIN_LOCALS (297) 4
END_LOCALS (298) 4
BEGIN_PARAMS (299) 4
END_PARAMS (300) 4
BEGIN_BODY (301) 4
END_BODY (302) 4
ELSE (303) 23
DO (304) 16


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1, on right: 0
Functions (52)
    on left: 2 3, on right: 1 2
Function (53)
    on left: 4, on right: 2
Declaration (54)
    on left: 5 6, on right: 8
Declaration_Loop (55)
    on left: 7 8, on right: 4 8
Ident (56)
    on left: 9, on right: 4 5 6 12 13 47 48 49
Statement_Loop (57)
    on left: 10 11, on right: 4 11 14 15 16 23
Statement (58)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 11
ElseStatement (59)
    on left: 22 23, on right: 14
BoolExp (60)
    on left: 24 25, on right: 14 15 16 27
BoolExpression (61)
    on left: 26 27, on right: 24 25
Comp (62)
    on left: 28 29 30 31 32 33, on right: 26
Expression (63)
    on left: 34 35 36, on right: 12 13 21 26 35 36 38 39 46 48
Expression_Loop (64)
    on left: 37 38 39, on right: 38 47
Mult_Expr (65)
    on left: 40 41 42 43, on right: 34 35 36 41 42 43
Term (66)
    on left: 44 45 46 47, on right: 40 41 42 43
Var (67)
    on left: 48 49, on right: 17 18 44


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    4 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 5

    Ident  go to state 6


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    2 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Functions)

    Functions  go to state 8
    Function   go to state 4


State 5

    9 Ident: IDENT .

    $default  reduce using rule 9 (Ident)


State 6

    4 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    2 Functions: Function Functions .

    $default  reduce using rule 2 (Functions)


State 9

    4 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declaration_Loop)

    Declaration       go to state 11
    Declaration_Loop  go to state 12
    Ident             go to state 13


State 11

    8 Declaration_Loop: Declaration . SEMICOLON Declaration_Loop

    SEMICOLON  shift, and go to state 14


State 12

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop . END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    END_PARAMS  shift, and go to state 15


State 13

    5 Declaration: Ident . COLON INTEGER
    6            | Ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 14

    8 Declaration_Loop: Declaration SEMICOLON . Declaration_Loop

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declaration_Loop)

    Declaration       go to state 11
    Declaration_Loop  go to state 17
    Ident             go to state 13


State 15

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS . BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 16

    5 Declaration: Ident COLON . INTEGER
    6            | Ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


State 17

    8 Declaration_Loop: Declaration SEMICOLON Declaration_Loop .

    $default  reduce using rule 8 (Declaration_Loop)


State 18

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS . Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declaration_Loop)

    Declaration       go to state 11
    Declaration_Loop  go to state 21
    Ident             go to state 13


State 19

    5 Declaration: Ident COLON INTEGER .

    $default  reduce using rule 5 (Declaration)


State 20

    6 Declaration: Ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 21

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop . END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    END_LOCALS  shift, and go to state 23


State 22

    6 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 23

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS . BEGIN_BODY Statement_Loop END_BODY

    BEGIN_BODY  shift, and go to state 25


State 24

    6 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 26


State 25

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY . Statement_Loop END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    BREAK     shift, and go to state 32
    RETURN    shift, and go to state 33
    DO        shift, and go to state 34

    $default  reduce using rule 10 (Statement_Loop)

    Ident           go to state 35
    Statement_Loop  go to state 36
    Statement       go to state 37


State 26

    6 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 38


State 27

   14 Statement: IF . BoolExp THEN Statement_Loop ElseStatement ENDIF

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 40
    NOT      shift, and go to state 41

    Ident           go to state 42
    BoolExp         go to state 43
    BoolExpression  go to state 44
    Expression      go to state 45
    Mult_Expr       go to state 46
    Term            go to state 47
    Var             go to state 48


State 28

   15 Statement: WHILE . BoolExp BEGINLOOP Statement_Loop ENDLOOP

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 40
    NOT      shift, and go to state 41

    Ident           go to state 42
    BoolExp         go to state 49
    BoolExpression  go to state 44
    Expression      go to state 45
    Mult_Expr       go to state 46
    Term            go to state 47
    Var             go to state 48


State 29

   17 Statement: READ . Var

    IDENT  shift, and go to state 5

    Ident  go to state 50
    Var    go to state 51


State 30

   18 Statement: WRITE . Var

    IDENT  shift, and go to state 5

    Ident  go to state 50
    Var    go to state 52


State 31

   19 Statement: CONTINUE .

    $default  reduce using rule 19 (Statement)


State 32

   20 Statement: BREAK .

    $default  reduce using rule 20 (Statement)


State 33

   21 Statement: RETURN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 54
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 34

   16 Statement: DO . BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp

    BEGINLOOP  shift, and go to state 55


State 35

   12 Statement: Ident . ASSIGN Expression
   13          | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression

    ASSIGN            shift, and go to state 56
    L_SQUARE_BRACKET  shift, and go to state 57


State 36

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop . END_BODY

    END_BODY  shift, and go to state 58


State 37

   11 Statement_Loop: Statement . SEMICOLON Statement_Loop

    SEMICOLON  shift, and go to state 59


State 38

    6 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 60


State 39

   45 Term: NUMBER .

    $default  reduce using rule 45 (Term)


State 40

   27 BoolExpression: L_PAREN . BoolExp R_PAREN
   46 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 40
    NOT      shift, and go to state 41

    Ident           go to state 42
    BoolExp         go to state 61
    BoolExpression  go to state 44
    Expression      go to state 62
    Mult_Expr       go to state 46
    Term            go to state 47
    Var             go to state 48


State 41

   24 BoolExp: NOT . BoolExpression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 40

    Ident           go to state 42
    BoolExpression  go to state 63
    Expression      go to state 45
    Mult_Expr       go to state 46
    Term            go to state 47
    Var             go to state 48


State 42

   47 Term: Ident . L_PAREN Expression_Loop R_PAREN
   48 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   49    | Ident .

    L_PAREN           shift, and go to state 64
    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 49 (Var)


State 43

   14 Statement: IF BoolExp . THEN Statement_Loop ElseStatement ENDIF

    THEN  shift, and go to state 66


State 44

   25 BoolExp: BoolExpression .

    $default  reduce using rule 25 (BoolExp)


State 45

   26 BoolExpression: Expression . Comp Expression

    EQ   shift, and go to state 67
    LT   shift, and go to state 68
    LTE  shift, and go to state 69
    GT   shift, and go to state 70
    GTE  shift, and go to state 71
    NEQ  shift, and go to state 72

    Comp  go to state 73


State 46

   34 Expression: Mult_Expr .
   35           | Mult_Expr . PLUS Expression
   36           | Mult_Expr . SUB Expression

    PLUS  shift, and go to state 74
    SUB   shift, and go to state 75

    $default  reduce using rule 34 (Expression)


State 47

   40 Mult_Expr: Term .
   41          | Term . MULT Mult_Expr
   42          | Term . DIV Mult_Expr
   43          | Term . MOD Mult_Expr

    MULT  shift, and go to state 76
    DIV   shift, and go to state 77
    MOD   shift, and go to state 78

    $default  reduce using rule 40 (Mult_Expr)


State 48

   44 Term: Var .

    $default  reduce using rule 44 (Term)


State 49

   15 Statement: WHILE BoolExp . BEGINLOOP Statement_Loop ENDLOOP

    BEGINLOOP  shift, and go to state 79


State 50

   48 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   49    | Ident .

    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 49 (Var)


State 51

   17 Statement: READ Var .

    $default  reduce using rule 17 (Statement)


State 52

   18 Statement: WRITE Var .

    $default  reduce using rule 18 (Statement)


State 53

   46 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 80
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 54

   21 Statement: RETURN Expression .

    $default  reduce using rule 21 (Statement)


State 55

   16 Statement: DO BEGINLOOP . Statement_Loop ENDLOOP WHILE BoolExp

    IDENT     shift, and go to state 5
    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    BREAK     shift, and go to state 32
    RETURN    shift, and go to state 33
    DO        shift, and go to state 34

    $default  reduce using rule 10 (Statement_Loop)

    Ident           go to state 35
    Statement_Loop  go to state 81
    Statement       go to state 37


State 56

   12 Statement: Ident ASSIGN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 82
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 57

   13 Statement: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET ASSIGN Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 83
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 58

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY .

    $default  reduce using rule 4 (Function)


State 59

   11 Statement_Loop: Statement SEMICOLON . Statement_Loop

    IDENT     shift, and go to state 5
    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    BREAK     shift, and go to state 32
    RETURN    shift, and go to state 33
    DO        shift, and go to state 34

    $default  reduce using rule 10 (Statement_Loop)

    Ident           go to state 35
    Statement_Loop  go to state 84
    Statement       go to state 37


State 60

    6 Declaration: Ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (Declaration)


State 61

   27 BoolExpression: L_PAREN BoolExp . R_PAREN

    R_PAREN  shift, and go to state 85


State 62

   26 BoolExpression: Expression . Comp Expression
   46 Term: L_PAREN Expression . R_PAREN

    EQ       shift, and go to state 67
    R_PAREN  shift, and go to state 86
    LT       shift, and go to state 68
    LTE      shift, and go to state 69
    GT       shift, and go to state 70
    GTE      shift, and go to state 71
    NEQ      shift, and go to state 72

    Comp  go to state 73


State 63

   24 BoolExp: NOT BoolExpression .

    $default  reduce using rule 24 (BoolExp)


State 64

   47 Term: Ident L_PAREN . Expression_Loop R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    $default  reduce using rule 37 (Expression_Loop)

    Ident            go to state 42
    Expression       go to state 87
    Expression_Loop  go to state 88
    Mult_Expr        go to state 46
    Term             go to state 47
    Var              go to state 48


State 65

   48 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 89
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 66

   14 Statement: IF BoolExp THEN . Statement_Loop ElseStatement ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    BREAK     shift, and go to state 32
    RETURN    shift, and go to state 33
    DO        shift, and go to state 34

    $default  reduce using rule 10 (Statement_Loop)

    Ident           go to state 35
    Statement_Loop  go to state 90
    Statement       go to state 37


State 67

   28 Comp: EQ .

    $default  reduce using rule 28 (Comp)


State 68

   30 Comp: LT .

    $default  reduce using rule 30 (Comp)


State 69

   32 Comp: LTE .

    $default  reduce using rule 32 (Comp)


State 70

   31 Comp: GT .

    $default  reduce using rule 31 (Comp)


State 71

   33 Comp: GTE .

    $default  reduce using rule 33 (Comp)


State 72

   29 Comp: NEQ .

    $default  reduce using rule 29 (Comp)


State 73

   26 BoolExpression: Expression Comp . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 91
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 74

   35 Expression: Mult_Expr PLUS . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 92
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 75

   36 Expression: Mult_Expr SUB . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 93
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 76

   41 Mult_Expr: Term MULT . Mult_Expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident      go to state 42
    Mult_Expr  go to state 94
    Term       go to state 47
    Var        go to state 48


State 77

   42 Mult_Expr: Term DIV . Mult_Expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident      go to state 42
    Mult_Expr  go to state 95
    Term       go to state 47
    Var        go to state 48


State 78

   43 Mult_Expr: Term MOD . Mult_Expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident      go to state 42
    Mult_Expr  go to state 96
    Term       go to state 47
    Var        go to state 48


State 79

   15 Statement: WHILE BoolExp BEGINLOOP . Statement_Loop ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    BREAK     shift, and go to state 32
    RETURN    shift, and go to state 33
    DO        shift, and go to state 34

    $default  reduce using rule 10 (Statement_Loop)

    Ident           go to state 35
    Statement_Loop  go to state 97
    Statement       go to state 37


State 80

   46 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 86


State 81

   16 Statement: DO BEGINLOOP Statement_Loop . ENDLOOP WHILE BoolExp

    ENDLOOP  shift, and go to state 98


State 82

   12 Statement: Ident ASSIGN Expression .

    $default  reduce using rule 12 (Statement)


State 83

   13 Statement: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET ASSIGN Expression

    R_SQUARE_BRACKET  shift, and go to state 99


State 84

   11 Statement_Loop: Statement SEMICOLON Statement_Loop .

    $default  reduce using rule 11 (Statement_Loop)


State 85

   27 BoolExpression: L_PAREN BoolExp R_PAREN .

    $default  reduce using rule 27 (BoolExpression)


State 86

   46 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 46 (Term)


State 87

   38 Expression_Loop: Expression . COMMA Expression_Loop
   39                | Expression .

    COMMA  shift, and go to state 100

    $default  reduce using rule 39 (Expression_Loop)


State 88

   47 Term: Ident L_PAREN Expression_Loop . R_PAREN

    R_PAREN  shift, and go to state 101


State 89

   48 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 102


State 90

   14 Statement: IF BoolExp THEN Statement_Loop . ElseStatement ENDIF

    ELSE  shift, and go to state 103

    $default  reduce using rule 22 (ElseStatement)

    ElseStatement  go to state 104


State 91

   26 BoolExpression: Expression Comp Expression .

    $default  reduce using rule 26 (BoolExpression)


State 92

   35 Expression: Mult_Expr PLUS Expression .

    $default  reduce using rule 35 (Expression)


State 93

   36 Expression: Mult_Expr SUB Expression .

    $default  reduce using rule 36 (Expression)


State 94

   41 Mult_Expr: Term MULT Mult_Expr .

    $default  reduce using rule 41 (Mult_Expr)


State 95

   42 Mult_Expr: Term DIV Mult_Expr .

    $default  reduce using rule 42 (Mult_Expr)


State 96

   43 Mult_Expr: Term MOD Mult_Expr .

    $default  reduce using rule 43 (Mult_Expr)


State 97

   15 Statement: WHILE BoolExp BEGINLOOP Statement_Loop . ENDLOOP

    ENDLOOP  shift, and go to state 105


State 98

   16 Statement: DO BEGINLOOP Statement_Loop ENDLOOP . WHILE BoolExp

    WHILE  shift, and go to state 106


State 99

   13 Statement: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . ASSIGN Expression

    ASSIGN  shift, and go to state 107


State 100

   38 Expression_Loop: Expression COMMA . Expression_Loop

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    $default  reduce using rule 37 (Expression_Loop)

    Ident            go to state 42
    Expression       go to state 87
    Expression_Loop  go to state 108
    Mult_Expr        go to state 46
    Term             go to state 47
    Var              go to state 48


State 101

   47 Term: Ident L_PAREN Expression_Loop R_PAREN .

    $default  reduce using rule 47 (Term)


State 102

   48 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 48 (Var)


State 103

   23 ElseStatement: ELSE . Statement_Loop

    IDENT     shift, and go to state 5
    IF        shift, and go to state 27
    WHILE     shift, and go to state 28
    READ      shift, and go to state 29
    WRITE     shift, and go to state 30
    CONTINUE  shift, and go to state 31
    BREAK     shift, and go to state 32
    RETURN    shift, and go to state 33
    DO        shift, and go to state 34

    $default  reduce using rule 10 (Statement_Loop)

    Ident           go to state 35
    Statement_Loop  go to state 109
    Statement       go to state 37


State 104

   14 Statement: IF BoolExp THEN Statement_Loop ElseStatement . ENDIF

    ENDIF  shift, and go to state 110


State 105

   15 Statement: WHILE BoolExp BEGINLOOP Statement_Loop ENDLOOP .

    $default  reduce using rule 15 (Statement)


State 106

   16 Statement: DO BEGINLOOP Statement_Loop ENDLOOP WHILE . BoolExp

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 40
    NOT      shift, and go to state 41

    Ident           go to state 42
    BoolExp         go to state 111
    BoolExpression  go to state 44
    Expression      go to state 45
    Mult_Expr       go to state 46
    Term            go to state 47
    Var             go to state 48


State 107

   13 Statement: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 39
    L_PAREN  shift, and go to state 53

    Ident       go to state 42
    Expression  go to state 112
    Mult_Expr   go to state 46
    Term        go to state 47
    Var         go to state 48


State 108

   38 Expression_Loop: Expression COMMA Expression_Loop .

    $default  reduce using rule 38 (Expression_Loop)


State 109

   23 ElseStatement: ELSE Statement_Loop .

    $default  reduce using rule 23 (ElseStatement)


State 110

   14 Statement: IF BoolExp THEN Statement_Loop ElseStatement ENDIF .

    $default  reduce using rule 14 (Statement)


State 111

   16 Statement: DO BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp .

    $default  reduce using rule 16 (Statement)


State 112

   13 Statement: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression .

    $default  reduce using rule 13 (Statement)
