Rules useless in parser due to conflicts

   14 Statement_Loop: Statement SEMICOLON


State 64 conflicts: 4 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: Function Functions
    3          | %empty

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    5 Declaration: Ident_Loop COLON INTEGER
    6            | Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    7 Declaration_Loop: %empty
    8                 | Declaration SEMICOLON Declaration_Loop

    9 Ident_Loop: Ident
   10           | Ident COMMA Ident_Loop

   11 Ident: IDENT

   12 Statement_Loop: Statement SEMICOLON Statement_Loop
   13               | %empty
   14               | Statement SEMICOLON

   15 Statement: Ident ASSIGN Expression
   16          | Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression
   17          | IF BoolExp THEN Statement_Loop ElseStatement ENDIF
   18          | WHILE BoolExp BEGINLOOP Statement_Loop ENDLOOP
   19          | DO BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp
   20          | READ Var
   21          | WRITE Var
   22          | CONTINUE
   23          | BREAK
   24          | RETURN Expression

   25 ElseStatement: %empty
   26              | ELSE Statement_Loop

   27 BoolExp: NOT BoolExpression
   28        | BoolExpression

   29 BoolExpression: Expression Comp Expression
   30               | TRUE
   31               | FALSE
   32               | L_PAREN BoolExp R_PAREN

   33 Comp: EQ
   34     | NEQ
   35     | LT
   36     | GT
   37     | LTE
   38     | GTE

   39 Expression: Mult_Expr
   40           | Mult_Expr PLUS Expression
   41           | Mult_Expr SUB Expression

   42 Expression_Loop: %empty
   43                | Expression COMMA Expression_Loop
   44                | Expression

   45 Mult_Expr: Term
   46          | Term MULT Mult_Expr
   47          | Term DIV Mult_Expr
   48          | Term MOD Mult_Expr

   49 Term: Var
   50     | NUMBER
   51     | L_PAREN Expression R_PAREN
   52     | Ident L_PAREN Expression_Loop R_PAREN

   53 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   54    | Ident


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 11
NUMBER (259) 6 50
EQ (260) 33
ASSIGN (261) 15 16
PLUS (262) 40
SUB (263) 41
MULT (264) 46
DIV (265) 47
L_PAREN (266) 32 51 52
R_PAREN (267) 32 51 52
SEMICOLON (268) 4 8 12 14
COLON (269) 5 6
LT (270) 35
LTE (271) 37
GT (272) 36
GTE (273) 38
L_SQUARE_BRACKET (274) 6 16 53
R_SQUARE_BRACKET (275) 6 16 53
MOD (276) 48
NEQ (277) 34
COMMA (278) 10 43
IF (279) 17
ENDIF (280) 17
WHILE (281) 18 19
THEN (282) 17
FUNCTION (283) 4
INTEGER (284) 5 6
READ (285) 20
WRITE (286) 21
ARRAY (287) 6
OF (288) 6
CONTINUE (289) 22
BREAK (290) 23
NOT (291) 27
TRUE (292) 30
FALSE (293) 31
RETURN (294) 24
BEGINLOOP (295) 18 19
ENDLOOP (296) 18 19
BEGIN_LOCALS (297) 4
END_LOCALS (298) 4
BEGIN_PARAMS (299) 4
END_PARAMS (300) 4
BEGIN_BODY (301) 4
END_BODY (302) 4
ELSE (303) 26
DO (304) 19


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
Program (51)
    on left: 1, on right: 0
Functions (52)
    on left: 2 3, on right: 1 2
Function (53)
    on left: 4, on right: 2
Declaration (54)
    on left: 5 6, on right: 8
Declaration_Loop (55)
    on left: 7 8, on right: 4 8
Ident_Loop (56)
    on left: 9 10, on right: 5 6 10
Ident (57)
    on left: 11, on right: 4 9 10 15 16 52 53 54
Statement_Loop (58)
    on left: 12 13 14, on right: 4 12 17 18 19 26
Statement (59)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 12 14
ElseStatement (60)
    on left: 25 26, on right: 17
BoolExp (61)
    on left: 27 28, on right: 17 18 19 32
BoolExpression (62)
    on left: 29 30 31 32, on right: 27 28
Comp (63)
    on left: 33 34 35 36 37 38, on right: 29
Expression (64)
    on left: 39 40 41, on right: 15 16 24 29 40 41 43 44 51 53
Expression_Loop (65)
    on left: 42 43 44, on right: 43 52
Mult_Expr (66)
    on left: 45 46 47 48, on right: 39 40 41 46 47 48
Term (67)
    on left: 49 50 51 52, on right: 45 46 47 48
Var (68)
    on left: 53 54, on right: 20 21 49


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    4 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 5

    Ident  go to state 6


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    2 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Functions)

    Functions  go to state 8
    Function   go to state 4


State 5

   11 Ident: IDENT .

    $default  reduce using rule 11 (Ident)


State 6

    4 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    2 Functions: Function Functions .

    $default  reduce using rule 2 (Functions)


State 9

    4 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declaration_Loop)

    Declaration       go to state 11
    Declaration_Loop  go to state 12
    Ident_Loop        go to state 13
    Ident             go to state 14


State 11

    8 Declaration_Loop: Declaration . SEMICOLON Declaration_Loop

    SEMICOLON  shift, and go to state 15


State 12

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop . END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    5 Declaration: Ident_Loop . COLON INTEGER
    6            | Ident_Loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

    9 Ident_Loop: Ident .
   10           | Ident . COMMA Ident_Loop

    COMMA  shift, and go to state 18

    $default  reduce using rule 9 (Ident_Loop)


State 15

    8 Declaration_Loop: Declaration SEMICOLON . Declaration_Loop

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declaration_Loop)

    Declaration       go to state 11
    Declaration_Loop  go to state 19
    Ident_Loop        go to state 13
    Ident             go to state 14


State 16

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS . BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    5 Declaration: Ident_Loop COLON . INTEGER
    6            | Ident_Loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 Ident_Loop: Ident COMMA . Ident_Loop

    IDENT  shift, and go to state 5

    Ident_Loop  go to state 23
    Ident       go to state 14


State 19

    8 Declaration_Loop: Declaration SEMICOLON Declaration_Loop .

    $default  reduce using rule 8 (Declaration_Loop)


State 20

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS . Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declaration_Loop)

    Declaration       go to state 11
    Declaration_Loop  go to state 24
    Ident_Loop        go to state 13
    Ident             go to state 14


State 21

    5 Declaration: Ident_Loop COLON INTEGER .

    $default  reduce using rule 5 (Declaration)


State 22

    6 Declaration: Ident_Loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   10 Ident_Loop: Ident COMMA Ident_Loop .

    $default  reduce using rule 10 (Ident_Loop)


State 24

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop . END_LOCALS BEGIN_BODY Statement_Loop END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    6 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS . BEGIN_BODY Statement_Loop END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    6 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY . Statement_Loop END_BODY

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    RETURN    shift, and go to state 36
    DO        shift, and go to state 37

    $default  reduce using rule 13 (Statement_Loop)

    Ident           go to state 38
    Statement_Loop  go to state 39
    Statement       go to state 40


State 29

    6 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 30

   17 Statement: IF . BoolExp THEN Statement_Loop ElseStatement ENDIF

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 48
    BoolExpression  go to state 49
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 31

   18 Statement: WHILE . BoolExp BEGINLOOP Statement_Loop ENDLOOP

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 54
    BoolExpression  go to state 49
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 32

   20 Statement: READ . Var

    IDENT  shift, and go to state 5

    Ident  go to state 55
    Var    go to state 56


State 33

   21 Statement: WRITE . Var

    IDENT  shift, and go to state 5

    Ident  go to state 55
    Var    go to state 57


State 34

   22 Statement: CONTINUE .

    $default  reduce using rule 22 (Statement)


State 35

   23 Statement: BREAK .

    $default  reduce using rule 23 (Statement)


State 36

   24 Statement: RETURN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 59
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 37

   19 Statement: DO . BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp

    BEGINLOOP  shift, and go to state 60


State 38

   15 Statement: Ident . ASSIGN Expression
   16          | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression

    ASSIGN            shift, and go to state 61
    L_SQUARE_BRACKET  shift, and go to state 62


State 39

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop . END_BODY

    END_BODY  shift, and go to state 63


State 40

   12 Statement_Loop: Statement . SEMICOLON Statement_Loop
   14               | Statement . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 41

    6 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 65


State 42

   50 Term: NUMBER .

    $default  reduce using rule 50 (Term)


State 43

   32 BoolExpression: L_PAREN . BoolExp R_PAREN
   51 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 66
    BoolExpression  go to state 49
    Expression      go to state 67
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 44

   27 BoolExp: NOT . BoolExpression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExpression  go to state 68
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 45

   30 BoolExpression: TRUE .

    $default  reduce using rule 30 (BoolExpression)


State 46

   31 BoolExpression: FALSE .

    $default  reduce using rule 31 (BoolExpression)


State 47

   52 Term: Ident . L_PAREN Expression_Loop R_PAREN
   53 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   54    | Ident .

    L_PAREN           shift, and go to state 69
    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 54 (Var)


State 48

   17 Statement: IF BoolExp . THEN Statement_Loop ElseStatement ENDIF

    THEN  shift, and go to state 71


State 49

   28 BoolExp: BoolExpression .

    $default  reduce using rule 28 (BoolExp)


State 50

   29 BoolExpression: Expression . Comp Expression

    EQ   shift, and go to state 72
    LT   shift, and go to state 73
    LTE  shift, and go to state 74
    GT   shift, and go to state 75
    GTE  shift, and go to state 76
    NEQ  shift, and go to state 77

    Comp  go to state 78


State 51

   39 Expression: Mult_Expr .
   40           | Mult_Expr . PLUS Expression
   41           | Mult_Expr . SUB Expression

    PLUS  shift, and go to state 79
    SUB   shift, and go to state 80

    $default  reduce using rule 39 (Expression)


State 52

   45 Mult_Expr: Term .
   46          | Term . MULT Mult_Expr
   47          | Term . DIV Mult_Expr
   48          | Term . MOD Mult_Expr

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 45 (Mult_Expr)


State 53

   49 Term: Var .

    $default  reduce using rule 49 (Term)


State 54

   18 Statement: WHILE BoolExp . BEGINLOOP Statement_Loop ENDLOOP

    BEGINLOOP  shift, and go to state 84


State 55

   53 Var: Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   54    | Ident .

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 54 (Var)


State 56

   20 Statement: READ Var .

    $default  reduce using rule 20 (Statement)


State 57

   21 Statement: WRITE Var .

    $default  reduce using rule 21 (Statement)


State 58

   51 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 85
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 59

   24 Statement: RETURN Expression .

    $default  reduce using rule 24 (Statement)


State 60

   19 Statement: DO BEGINLOOP . Statement_Loop ENDLOOP WHILE BoolExp

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    RETURN    shift, and go to state 36
    DO        shift, and go to state 37

    $default  reduce using rule 13 (Statement_Loop)

    Ident           go to state 38
    Statement_Loop  go to state 86
    Statement       go to state 40


State 61

   15 Statement: Ident ASSIGN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 87
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 62

   16 Statement: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET ASSIGN Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 88
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 63

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declaration_Loop END_PARAMS BEGIN_LOCALS Declaration_Loop END_LOCALS BEGIN_BODY Statement_Loop END_BODY .

    $default  reduce using rule 4 (Function)


State 64

   12 Statement_Loop: Statement SEMICOLON . Statement_Loop
   14               | Statement SEMICOLON .

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    RETURN    shift, and go to state 36
    DO        shift, and go to state 37

    ENDIF     reduce using rule 13 (Statement_Loop)
    ENDIF     [reduce using rule 14 (Statement_Loop)]
    ENDLOOP   reduce using rule 13 (Statement_Loop)
    ENDLOOP   [reduce using rule 14 (Statement_Loop)]
    END_BODY  reduce using rule 13 (Statement_Loop)
    END_BODY  [reduce using rule 14 (Statement_Loop)]
    ELSE      reduce using rule 13 (Statement_Loop)
    ELSE      [reduce using rule 14 (Statement_Loop)]
    $default  reduce using rule 13 (Statement_Loop)

    Ident           go to state 38
    Statement_Loop  go to state 89
    Statement       go to state 40


State 65

    6 Declaration: Ident_Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (Declaration)


State 66

   32 BoolExpression: L_PAREN BoolExp . R_PAREN

    R_PAREN  shift, and go to state 90


State 67

   29 BoolExpression: Expression . Comp Expression
   51 Term: L_PAREN Expression . R_PAREN

    EQ       shift, and go to state 72
    R_PAREN  shift, and go to state 91
    LT       shift, and go to state 73
    LTE      shift, and go to state 74
    GT       shift, and go to state 75
    GTE      shift, and go to state 76
    NEQ      shift, and go to state 77

    Comp  go to state 78


State 68

   27 BoolExp: NOT BoolExpression .

    $default  reduce using rule 27 (BoolExp)


State 69

   52 Term: Ident L_PAREN . Expression_Loop R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    $default  reduce using rule 42 (Expression_Loop)

    Ident            go to state 47
    Expression       go to state 92
    Expression_Loop  go to state 93
    Mult_Expr        go to state 51
    Term             go to state 52
    Var              go to state 53


State 70

   53 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 94
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 71

   17 Statement: IF BoolExp THEN . Statement_Loop ElseStatement ENDIF

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    RETURN    shift, and go to state 36
    DO        shift, and go to state 37

    $default  reduce using rule 13 (Statement_Loop)

    Ident           go to state 38
    Statement_Loop  go to state 95
    Statement       go to state 40


State 72

   33 Comp: EQ .

    $default  reduce using rule 33 (Comp)


State 73

   35 Comp: LT .

    $default  reduce using rule 35 (Comp)


State 74

   37 Comp: LTE .

    $default  reduce using rule 37 (Comp)


State 75

   36 Comp: GT .

    $default  reduce using rule 36 (Comp)


State 76

   38 Comp: GTE .

    $default  reduce using rule 38 (Comp)


State 77

   34 Comp: NEQ .

    $default  reduce using rule 34 (Comp)


State 78

   29 BoolExpression: Expression Comp . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 96
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 79

   40 Expression: Mult_Expr PLUS . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 97
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 80

   41 Expression: Mult_Expr SUB . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 98
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 81

   46 Mult_Expr: Term MULT . Mult_Expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident      go to state 47
    Mult_Expr  go to state 99
    Term       go to state 52
    Var        go to state 53


State 82

   47 Mult_Expr: Term DIV . Mult_Expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident      go to state 47
    Mult_Expr  go to state 100
    Term       go to state 52
    Var        go to state 53


State 83

   48 Mult_Expr: Term MOD . Mult_Expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident      go to state 47
    Mult_Expr  go to state 101
    Term       go to state 52
    Var        go to state 53


State 84

   18 Statement: WHILE BoolExp BEGINLOOP . Statement_Loop ENDLOOP

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    RETURN    shift, and go to state 36
    DO        shift, and go to state 37

    $default  reduce using rule 13 (Statement_Loop)

    Ident           go to state 38
    Statement_Loop  go to state 102
    Statement       go to state 40


State 85

   51 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 91


State 86

   19 Statement: DO BEGINLOOP Statement_Loop . ENDLOOP WHILE BoolExp

    ENDLOOP  shift, and go to state 103


State 87

   15 Statement: Ident ASSIGN Expression .

    $default  reduce using rule 15 (Statement)


State 88

   16 Statement: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET ASSIGN Expression

    R_SQUARE_BRACKET  shift, and go to state 104


State 89

   12 Statement_Loop: Statement SEMICOLON Statement_Loop .

    $default  reduce using rule 12 (Statement_Loop)


State 90

   32 BoolExpression: L_PAREN BoolExp R_PAREN .

    $default  reduce using rule 32 (BoolExpression)


State 91

   51 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 51 (Term)


State 92

   43 Expression_Loop: Expression . COMMA Expression_Loop
   44                | Expression .

    COMMA  shift, and go to state 105

    $default  reduce using rule 44 (Expression_Loop)


State 93

   52 Term: Ident L_PAREN Expression_Loop . R_PAREN

    R_PAREN  shift, and go to state 106


State 94

   53 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 107


State 95

   17 Statement: IF BoolExp THEN Statement_Loop . ElseStatement ENDIF

    ELSE  shift, and go to state 108

    $default  reduce using rule 25 (ElseStatement)

    ElseStatement  go to state 109


State 96

   29 BoolExpression: Expression Comp Expression .

    $default  reduce using rule 29 (BoolExpression)


State 97

   40 Expression: Mult_Expr PLUS Expression .

    $default  reduce using rule 40 (Expression)


State 98

   41 Expression: Mult_Expr SUB Expression .

    $default  reduce using rule 41 (Expression)


State 99

   46 Mult_Expr: Term MULT Mult_Expr .

    $default  reduce using rule 46 (Mult_Expr)


State 100

   47 Mult_Expr: Term DIV Mult_Expr .

    $default  reduce using rule 47 (Mult_Expr)


State 101

   48 Mult_Expr: Term MOD Mult_Expr .

    $default  reduce using rule 48 (Mult_Expr)


State 102

   18 Statement: WHILE BoolExp BEGINLOOP Statement_Loop . ENDLOOP

    ENDLOOP  shift, and go to state 110


State 103

   19 Statement: DO BEGINLOOP Statement_Loop ENDLOOP . WHILE BoolExp

    WHILE  shift, and go to state 111


State 104

   16 Statement: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . ASSIGN Expression

    ASSIGN  shift, and go to state 112


State 105

   43 Expression_Loop: Expression COMMA . Expression_Loop

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    $default  reduce using rule 42 (Expression_Loop)

    Ident            go to state 47
    Expression       go to state 92
    Expression_Loop  go to state 113
    Mult_Expr        go to state 51
    Term             go to state 52
    Var              go to state 53


State 106

   52 Term: Ident L_PAREN Expression_Loop R_PAREN .

    $default  reduce using rule 52 (Term)


State 107

   53 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 53 (Var)


State 108

   26 ElseStatement: ELSE . Statement_Loop

    IDENT     shift, and go to state 5
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    READ      shift, and go to state 32
    WRITE     shift, and go to state 33
    CONTINUE  shift, and go to state 34
    BREAK     shift, and go to state 35
    RETURN    shift, and go to state 36
    DO        shift, and go to state 37

    $default  reduce using rule 13 (Statement_Loop)

    Ident           go to state 38
    Statement_Loop  go to state 114
    Statement       go to state 40


State 109

   17 Statement: IF BoolExp THEN Statement_Loop ElseStatement . ENDIF

    ENDIF  shift, and go to state 115


State 110

   18 Statement: WHILE BoolExp BEGINLOOP Statement_Loop ENDLOOP .

    $default  reduce using rule 18 (Statement)


State 111

   19 Statement: DO BEGINLOOP Statement_Loop ENDLOOP WHILE . BoolExp

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 43
    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46

    Ident           go to state 47
    BoolExp         go to state 116
    BoolExpression  go to state 49
    Expression      go to state 50
    Mult_Expr       go to state 51
    Term            go to state 52
    Var             go to state 53


State 112

   16 Statement: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN . Expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 42
    L_PAREN  shift, and go to state 58

    Ident       go to state 47
    Expression  go to state 117
    Mult_Expr   go to state 51
    Term        go to state 52
    Var         go to state 53


State 113

   43 Expression_Loop: Expression COMMA Expression_Loop .

    $default  reduce using rule 43 (Expression_Loop)


State 114

   26 ElseStatement: ELSE Statement_Loop .

    $default  reduce using rule 26 (ElseStatement)


State 115

   17 Statement: IF BoolExp THEN Statement_Loop ElseStatement ENDIF .

    $default  reduce using rule 17 (Statement)


State 116

   19 Statement: DO BEGINLOOP Statement_Loop ENDLOOP WHILE BoolExp .

    $default  reduce using rule 19 (Statement)


State 117

   16 Statement: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET ASSIGN Expression .

    $default  reduce using rule 16 (Statement)
